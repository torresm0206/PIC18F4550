

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jun 24 10:17:11 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 23/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     _PIR1	set	3998
    55   000000                     _SSPCON2bits	set	4037
    56   000000                     _TRISBbits	set	3987
    57   000000                     _PIR1bits	set	3998
    58   000000                     _SSPCON2	set	4037
    59   000000                     _SSPCON1	set	4038
    60   000000                     _SSPBUF	set	4041
    61   000000                     _SSPADD	set	4040
    62   000000                     _SSPSTAT	set	4039
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67   000A5C                     __pcinit:
    68                           	callstack 0
    69   000A5C                     start_initialization:
    70                           	callstack 0
    71   000A5C                     __initialization:
    72                           	callstack 0
    73   000A5C                     end_of_initialization:
    74                           	callstack 0
    75   000A5C                     __end_of__initialization:
    76                           	callstack 0
    77   000A5C  0100               	movlb	0
    78   000A5E  EFC1  F004         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81   000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83   000001                     I2C_Write@dato:
    84                           	callstack 0
    85                           
    86                           ; 1 bytes @ 0x0
    87   000001                     	ds	1
    88   000002                     ??_LCD_Command:
    89   000002                     ??_LCD_Data:
    90                           
    91                           ; 1 bytes @ 0x1
    92   000002                     	ds	1
    93   000003                     LCD_Command@command:
    94                           	callstack 0
    95   000003                     LCD_Data@letra:
    96                           	callstack 0
    97                           
    98                           ; 1 bytes @ 0x2
    99   000003                     	ds	1
   100   000004                     ??_LCD_Init:
   101                           
   102                           ; 1 bytes @ 0x3
   103   000004                     	ds	2
   104   000006                     ??_main:
   105                           
   106                           ; 1 bytes @ 0x5
   107   000006                     	ds	2
   108                           
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 21 in file "main.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2, status,0, cstack
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   128 ;;      Params:         0       0       0       0       0       0       0       0       0
   129 ;;      Locals:         0       0       0       0       0       0       0       0       0
   130 ;;      Temps:          2       0       0       0       0       0       0       0       0
   131 ;;      Totals:         2       0       0       0       0       0       0       0       0
   132 ;;Total ram usage:        2 bytes
   133 ;; Hardware stack levels required when called: 3
   134 ;; This function calls:
   135 ;;		_I2C_Init
   136 ;;		_LCD_Data
   137 ;;		_LCD_Init
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144   000982                     __ptext0:
   145                           	callstack 0
   146   000982                     _main:
   147                           	callstack 28
   148   000982                     
   149                           ;main.c: 22:     return;
   150   000982  0E4D               	movlw	77
   151   000984  6E07               	movwf	(??_main+1)^0,c
   152   000986  0E19               	movlw	25
   153   000988  6E06               	movwf	??_main^0,c
   154   00098A  0E50               	movlw	80
   155   00098C                     u57:
   156   00098C  2EE8               	decfsz	wreg,f,c
   157   00098E  D7FE               	bra	u57
   158   000990  2E06               	decfsz	??_main^0,f,c
   159   000992  D7FC               	bra	u57
   160   000994  2E07               	decfsz	(??_main+1)^0,f,c
   161   000996  D7FA               	bra	u57
   162   000998                     
   163                           ;main.c: 23: }
   164   000998  EC23  F005         	call	_I2C_Init	;wreg free
   165   00099C  EC01  F004         	call	_LCD_Init	;wreg free
   166   0009A0  0E54               	movlw	84
   167   0009A2  EC82  F004         	call	_LCD_Data
   168   0009A6  0E4F               	movlw	79
   169   0009A8  EC82  F004         	call	_LCD_Data
   170   0009AC  0E43               	movlw	67
   171   0009AE  EC82  F004         	call	_LCD_Data
   172   0009B2  0E48               	movlw	72
   173   0009B4  EC82  F004         	call	_LCD_Data
   174   0009B8  0E49               	movlw	73
   175   0009BA  EC82  F004         	call	_LCD_Data
   176   0009BE  0E4D               	movlw	77
   177   0009C0  EC82  F004         	call	_LCD_Data
   178   0009C4  0E49               	movlw	73
   179   0009C6  EC82  F004         	call	_LCD_Data
   180   0009CA  0E5A               	movlw	90
   181   0009CC  EC82  F004         	call	_LCD_Data
   182   0009D0  0E4F               	movlw	79
   183   0009D2  EC82  F004         	call	_LCD_Data
   184   0009D6  0E4C               	movlw	76
   185   0009D8  EC82  F004         	call	_LCD_Data
   186   0009DC  0E43               	movlw	67
   187   0009DE  EC82  F004         	call	_LCD_Data
   188   0009E2  0E4F               	movlw	79
   189   0009E4  EC82  F004         	call	_LCD_Data
   190   0009E8                     l58:
   191   0009E8  0003               	sleep		;# 
   192   0009EA  EFF4  F004         	goto	l58
   193   0009EE  EF01  F000         	goto	start
   194   0009F2                     __end_of_main:
   195                           	callstack 0
   196                           
   197 ;; *************** function _LCD_Init *****************
   198 ;; Defined at:
   199 ;;		line 72 in file "./LCD_I2C.h"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2, status,0, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   213 ;;      Params:         0       0       0       0       0       0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0       0       0
   215 ;;      Temps:          2       0       0       0       0       0       0       0       0
   216 ;;      Totals:         2       0       0       0       0       0       0       0       0
   217 ;;Total ram usage:        2 bytes
   218 ;; Hardware stack levels used: 1
   219 ;; Hardware stack levels required when called: 2
   220 ;; This function calls:
   221 ;;		_LCD_Command
   222 ;; This function is called by:
   223 ;;		_main
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text1
   228   000802                     __ptext1:
   229                           	callstack 0
   230   000802                     _LCD_Init:
   231                           	callstack 28
   232   000802                     
   233                           ;./LCD_I2C.h: 75:     _delay((unsigned long)((50)*(20000000/4000.0)));
   234   000802  0E02               	movlw	2
   235   000804  6E05               	movwf	(??_LCD_Init+1)^0,c
   236   000806  0E45               	movlw	69
   237   000808  6E04               	movwf	??_LCD_Init^0,c
   238   00080A  0EAA               	movlw	170
   239   00080C                     u67:
   240   00080C  2EE8               	decfsz	wreg,f,c
   241   00080E  D7FE               	bra	u67
   242   000810  2E04               	decfsz	??_LCD_Init^0,f,c
   243   000812  D7FC               	bra	u67
   244   000814  2E05               	decfsz	(??_LCD_Init+1)^0,f,c
   245   000816  D7FA               	bra	u67
   246   000818                     
   247                           ;./LCD_I2C.h: 76:     LCD_Command(0x03);
   248   000818  0E03               	movlw	3
   249   00081A  EC43  F004         	call	_LCD_Command
   250   00081E                     
   251                           ;./LCD_I2C.h: 77:     _delay((unsigned long)((5)*(20000000/4000.0)));
   252   00081E  0E21               	movlw	33
   253   000820  6E04               	movwf	??_LCD_Init^0,c
   254   000822  0E76               	movlw	118
   255   000824                     u77:
   256   000824  2EE8               	decfsz	wreg,f,c
   257   000826  D7FE               	bra	u77
   258   000828  2E04               	decfsz	??_LCD_Init^0,f,c
   259   00082A  D7FC               	bra	u77
   260   00082C  D000               	nop2	
   261                           
   262                           ;./LCD_I2C.h: 78:     LCD_Command(0x03);
   263   00082E  0E03               	movlw	3
   264   000830  EC43  F004         	call	_LCD_Command
   265   000834                     
   266                           ;./LCD_I2C.h: 79:     _delay((unsigned long)((150)*(20000000/4000000.0)));
   267   000834  0EFA               	movlw	250
   268   000836                     u87:
   269   000836  2EE8               	decfsz	wreg,f,c
   270   000838  D7FE               	bra	u87
   271   00083A                     
   272                           ;./LCD_I2C.h: 80:     LCD_Command(0x03);
   273   00083A  0E03               	movlw	3
   274   00083C  EC43  F004         	call	_LCD_Command
   275                           
   276                           ;./LCD_I2C.h: 81:     _delay((unsigned long)((5)*(20000000/4000.0)));
   277   000840  0E21               	movlw	33
   278   000842  6E04               	movwf	??_LCD_Init^0,c
   279   000844  0E76               	movlw	118
   280   000846                     u97:
   281   000846  2EE8               	decfsz	wreg,f,c
   282   000848  D7FE               	bra	u97
   283   00084A  2E04               	decfsz	??_LCD_Init^0,f,c
   284   00084C  D7FC               	bra	u97
   285   00084E  D000               	nop2	
   286   000850                     
   287                           ;./LCD_I2C.h: 82:     LCD_Command(0x02);
   288   000850  0E02               	movlw	2
   289   000852  EC43  F004         	call	_LCD_Command
   290   000856                     
   291                           ;./LCD_I2C.h: 85:     LCD_Command(0x28);
   292   000856  0E28               	movlw	40
   293   000858  EC43  F004         	call	_LCD_Command
   294   00085C                     
   295                           ;./LCD_I2C.h: 86:     LCD_Command(0x0C);
   296   00085C  0E0C               	movlw	12
   297   00085E  EC43  F004         	call	_LCD_Command
   298   000862                     
   299                           ;./LCD_I2C.h: 87:     LCD_Command(0x06);
   300   000862  0E06               	movlw	6
   301   000864  EC43  F004         	call	_LCD_Command
   302   000868                     
   303                           ;./LCD_I2C.h: 88:     LCD_Command(0x01);
   304   000868  0E01               	movlw	1
   305   00086A  EC43  F004         	call	_LCD_Command
   306   00086E                     
   307                           ;./LCD_I2C.h: 89:     _delay((unsigned long)((5)*(20000000/4000.0)));
   308   00086E  0E21               	movlw	33
   309   000870  6E04               	movwf	??_LCD_Init^0,c
   310   000872  0E76               	movlw	118
   311   000874                     u107:
   312   000874  2EE8               	decfsz	wreg,f,c
   313   000876  D7FE               	bra	u107
   314   000878  2E04               	decfsz	??_LCD_Init^0,f,c
   315   00087A  D7FC               	bra	u107
   316   00087C  D000               	nop2	
   317                           
   318                           ;./LCD_I2C.h: 90:     LCD_Command(0x0F);
   319   00087E  0E0F               	movlw	15
   320   000880  EC43  F004         	call	_LCD_Command
   321   000884  0012               	return		;funcret
   322   000886                     __end_of_LCD_Init:
   323                           	callstack 0
   324                           
   325 ;; *************** function _LCD_Command *****************
   326 ;; Defined at:
   327 ;;		line 52 in file "./LCD_I2C.h"
   328 ;; Parameters:    Size  Location     Type
   329 ;;  command         1    wreg     unsigned char 
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  command         1    2[COMRAM] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         1       0       0       0       0       0       0       0       0
   343 ;;      Temps:          1       0       0       0       0       0       0       0       0
   344 ;;      Totals:         2       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        2 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; Hardware stack levels required when called: 1
   348 ;; This function calls:
   349 ;;		_I2C_Start
   350 ;;		_I2C_Stop
   351 ;;		_I2C_Write
   352 ;; This function is called by:
   353 ;;		_LCD_Init
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text2
   358   000886                     __ptext2:
   359                           	callstack 0
   360   000886                     _LCD_Command:
   361                           	callstack 28
   362                           
   363                           ;incstack = 0
   364                           ;LCD_Command@command stored from wreg
   365   000886  6E03               	movwf	LCD_Command@command^0,c
   366   000888                     
   367                           ;./LCD_I2C.h: 52: void LCD_Command( unsigned char command);./LCD_I2C.h: 53: {;./LCD_I2C.
      +                          h: 54:     I2C_Start();
   368   000888  EC18  F005         	call	_I2C_Start	;wreg free
   369                           
   370                           ;./LCD_I2C.h: 55:     I2C_Write(0x27<<1);
   371   00088C  0E4E               	movlw	78
   372   00088E  ECF9  F004         	call	_I2C_Write
   373   000892                     
   374                           ;./LCD_I2C.h: 58:     I2C_Write((command & 0xF0) | 0b00001000);
   375   000892  5003               	movf	LCD_Command@command^0,w,c
   376   000894  0BF0               	andlw	240
   377   000896  0908               	iorlw	8
   378   000898  ECF9  F004         	call	_I2C_Write
   379   00089C                     
   380                           ;./LCD_I2C.h: 59:     I2C_Write(((command & 0xF0) | 0b00000100) | 0b00001000);
   381   00089C  5003               	movf	LCD_Command@command^0,w,c
   382   00089E  0BF0               	andlw	240
   383   0008A0  090C               	iorlw	12
   384   0008A2  ECF9  F004         	call	_I2C_Write
   385   0008A6                     
   386                           ;./LCD_I2C.h: 60:     _delay((unsigned long)((1)*(20000000/4000.0)));
   387   0008A6  0E07               	movlw	7
   388   0008A8  6E02               	movwf	??_LCD_Command^0,c
   389   0008AA  0E7D               	movlw	125
   390   0008AC                     u117:
   391   0008AC  2EE8               	decfsz	wreg,f,c
   392   0008AE  D7FE               	bra	u117
   393   0008B0  2E02               	decfsz	??_LCD_Command^0,f,c
   394   0008B2  D7FC               	bra	u117
   395   0008B4  0000               	nop	
   396   0008B6                     
   397                           ;./LCD_I2C.h: 61:     I2C_Write((command & 0xF0) | 0b00001000);
   398   0008B6  5003               	movf	LCD_Command@command^0,w,c
   399   0008B8  0BF0               	andlw	240
   400   0008BA  0908               	iorlw	8
   401   0008BC  ECF9  F004         	call	_I2C_Write
   402   0008C0                     
   403                           ;./LCD_I2C.h: 64:     I2C_Write((command << 4) | 0b00001000);
   404   0008C0  3803               	swapf	LCD_Command@command^0,w,c
   405   0008C2  0BF0               	andlw	240
   406   0008C4  0908               	iorlw	8
   407   0008C6  ECF9  F004         	call	_I2C_Write
   408   0008CA                     
   409                           ;./LCD_I2C.h: 65:     I2C_Write(((command << 4) | 0b00001000) | 0b00000100);
   410   0008CA  3803               	swapf	LCD_Command@command^0,w,c
   411   0008CC  0BF0               	andlw	240
   412   0008CE  090C               	iorlw	12
   413   0008D0  ECF9  F004         	call	_I2C_Write
   414   0008D4                     
   415                           ;./LCD_I2C.h: 66:     _delay((unsigned long)((1)*(20000000/4000.0)));
   416   0008D4  0E07               	movlw	7
   417   0008D6  6E02               	movwf	??_LCD_Command^0,c
   418   0008D8  0E7D               	movlw	125
   419   0008DA                     u127:
   420   0008DA  2EE8               	decfsz	wreg,f,c
   421   0008DC  D7FE               	bra	u127
   422   0008DE  2E02               	decfsz	??_LCD_Command^0,f,c
   423   0008E0  D7FC               	bra	u127
   424   0008E2  0000               	nop	
   425   0008E4                     
   426                           ;./LCD_I2C.h: 67:     I2C_Write((command << 4) | 0b00001000);
   427   0008E4  3803               	swapf	LCD_Command@command^0,w,c
   428   0008E6  0BF0               	andlw	240
   429   0008E8  0908               	iorlw	8
   430   0008EA  ECF9  F004         	call	_I2C_Write
   431                           
   432                           ;./LCD_I2C.h: 68:     I2C_Stop();
   433   0008EE  EC0D  F005         	call	_I2C_Stop	;wreg free
   434   0008F2                     
   435                           ;./LCD_I2C.h: 69:     _delay((unsigned long)((5)*(20000000/4000.0)));
   436   0008F2  0E21               	movlw	33
   437   0008F4  6E02               	movwf	??_LCD_Command^0,c
   438   0008F6  0E76               	movlw	118
   439   0008F8                     u137:
   440   0008F8  2EE8               	decfsz	wreg,f,c
   441   0008FA  D7FE               	bra	u137
   442   0008FC  2E02               	decfsz	??_LCD_Command^0,f,c
   443   0008FE  D7FC               	bra	u137
   444   000900  D000               	nop2	
   445   000902  0012               	return		;funcret
   446   000904                     __end_of_LCD_Command:
   447                           	callstack 0
   448                           
   449 ;; *************** function _LCD_Data *****************
   450 ;; Defined at:
   451 ;;		line 93 in file "./LCD_I2C.h"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  letra           1    wreg     unsigned char 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  letra           1    2[COMRAM] unsigned char 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  2   52[None  ] int 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   465 ;;      Params:         0       0       0       0       0       0       0       0       0
   466 ;;      Locals:         1       0       0       0       0       0       0       0       0
   467 ;;      Temps:          1       0       0       0       0       0       0       0       0
   468 ;;      Totals:         2       0       0       0       0       0       0       0       0
   469 ;;Total ram usage:        2 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 1
   472 ;; This function calls:
   473 ;;		_I2C_Start
   474 ;;		_I2C_Stop
   475 ;;		_I2C_Write
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text3
   482   000904                     __ptext3:
   483                           	callstack 0
   484   000904                     _LCD_Data:
   485                           	callstack 29
   486                           
   487                           ;incstack = 0
   488                           ;LCD_Data@letra stored from wreg
   489   000904  6E03               	movwf	LCD_Data@letra^0,c
   490   000906                     
   491                           ;./LCD_I2C.h: 93: LCD_Data(unsigned char letra);./LCD_I2C.h: 94: {;./LCD_I2C.h: 95:     
      +                          I2C_Start();
   492   000906  EC18  F005         	call	_I2C_Start	;wreg free
   493                           
   494                           ;./LCD_I2C.h: 96:     I2C_Write(0x27<<1);
   495   00090A  0E4E               	movlw	78
   496   00090C  ECF9  F004         	call	_I2C_Write
   497   000910                     
   498                           ;./LCD_I2C.h: 99:     I2C_Write(((letra & 0xF0) | 0b00001000) | 0b00000001);
   499   000910  5003               	movf	LCD_Data@letra^0,w,c
   500   000912  0BF0               	andlw	240
   501   000914  0909               	iorlw	9
   502   000916  ECF9  F004         	call	_I2C_Write
   503   00091A                     
   504                           ;./LCD_I2C.h: 100:     I2C_Write((((letra & 0xF0) | 0b00000100) | 0b00001000) | 0b000000
      +                          01);
   505   00091A  5003               	movf	LCD_Data@letra^0,w,c
   506   00091C  0BF0               	andlw	240
   507   00091E  090D               	iorlw	13
   508   000920  ECF9  F004         	call	_I2C_Write
   509   000924                     
   510                           ;./LCD_I2C.h: 101:     _delay((unsigned long)((1)*(20000000/4000.0)));
   511   000924  0E07               	movlw	7
   512   000926  6E02               	movwf	??_LCD_Data^0,c
   513   000928  0E7D               	movlw	125
   514   00092A                     u147:
   515   00092A  2EE8               	decfsz	wreg,f,c
   516   00092C  D7FE               	bra	u147
   517   00092E  2E02               	decfsz	??_LCD_Data^0,f,c
   518   000930  D7FC               	bra	u147
   519   000932  0000               	nop	
   520   000934                     
   521                           ;./LCD_I2C.h: 102:     I2C_Write(((letra & 0xF0) | 0b00001000) | 0b00000001);
   522   000934  5003               	movf	LCD_Data@letra^0,w,c
   523   000936  0BF0               	andlw	240
   524   000938  0909               	iorlw	9
   525   00093A  ECF9  F004         	call	_I2C_Write
   526   00093E                     
   527                           ;./LCD_I2C.h: 105:     I2C_Write((((letra << 4)) | 0b00001000) | 0b00000001 );
   528   00093E  3803               	swapf	LCD_Data@letra^0,w,c
   529   000940  0BF0               	andlw	240
   530   000942  0909               	iorlw	9
   531   000944  ECF9  F004         	call	_I2C_Write
   532   000948                     
   533                           ;./LCD_I2C.h: 106:     I2C_Write((((letra << 4) | 0b00001000) | 0b00000100) | 0b00000001
      +                          );
   534   000948  3803               	swapf	LCD_Data@letra^0,w,c
   535   00094A  0BF0               	andlw	240
   536   00094C  090D               	iorlw	13
   537   00094E  ECF9  F004         	call	_I2C_Write
   538   000952                     
   539                           ;./LCD_I2C.h: 107:     _delay((unsigned long)((1)*(20000000/4000.0)));
   540   000952  0E07               	movlw	7
   541   000954  6E02               	movwf	??_LCD_Data^0,c
   542   000956  0E7D               	movlw	125
   543   000958                     u157:
   544   000958  2EE8               	decfsz	wreg,f,c
   545   00095A  D7FE               	bra	u157
   546   00095C  2E02               	decfsz	??_LCD_Data^0,f,c
   547   00095E  D7FC               	bra	u157
   548   000960  0000               	nop	
   549   000962                     
   550                           ;./LCD_I2C.h: 108:     I2C_Write(((letra << 4) | 0b00001000) | 0b00000001);
   551   000962  3803               	swapf	LCD_Data@letra^0,w,c
   552   000964  0BF0               	andlw	240
   553   000966  0909               	iorlw	9
   554   000968  ECF9  F004         	call	_I2C_Write
   555                           
   556                           ;./LCD_I2C.h: 109:     I2C_Stop();
   557   00096C  EC0D  F005         	call	_I2C_Stop	;wreg free
   558   000970                     
   559                           ;./LCD_I2C.h: 110:     _delay((unsigned long)((5)*(20000000/4000.0)));
   560   000970  0E21               	movlw	33
   561   000972  6E02               	movwf	??_LCD_Data^0,c
   562   000974  0E76               	movlw	118
   563   000976                     u167:
   564   000976  2EE8               	decfsz	wreg,f,c
   565   000978  D7FE               	bra	u167
   566   00097A  2E02               	decfsz	??_LCD_Data^0,f,c
   567   00097C  D7FC               	bra	u167
   568   00097E  D000               	nop2	
   569   000980  0012               	return		;funcret
   570   000982                     __end_of_LCD_Data:
   571                           	callstack 0
   572                           
   573 ;; *************** function _I2C_Write *****************
   574 ;; Defined at:
   575 ;;		line 42 in file "./LCD_I2C.h"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  dato            1    wreg     unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  dato            1    0[COMRAM] unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   589 ;;      Params:         0       0       0       0       0       0       0       0       0
   590 ;;      Locals:         1       0       0       0       0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0
   592 ;;      Totals:         1       0       0       0       0       0       0       0       0
   593 ;;Total ram usage:        1 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_LCD_Command
   599 ;;		_LCD_Data
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text4
   604   0009F2                     __ptext4:
   605                           	callstack 0
   606   0009F2                     _I2C_Write:
   607                           	callstack 28
   608                           
   609                           ;incstack = 0
   610                           ;I2C_Write@dato stored from wreg
   611   0009F2  6E01               	movwf	I2C_Write@dato^0,c
   612   0009F4                     
   613                           ;./LCD_I2C.h: 42: void I2C_Write(unsigned char dato);./LCD_I2C.h: 43: {;./LCD_I2C.h: 44:
      +                               SSPBUF = dato;
   614   0009F4  C001  FFC9         	movff	I2C_Write@dato,4041	;volatile
   615   0009F8                     l38:
   616   0009F8  A69E               	btfss	158,3,c	;volatile
   617   0009FA  EF01  F005         	goto	u31
   618   0009FE  EF03  F005         	goto	u30
   619   000A02                     u31:
   620   000A02  EFFC  F004         	goto	l38
   621   000A06                     u30:
   622   000A06                     l41:
   623   000A06  BCC5               	btfsc	197,6,c	;volatile
   624   000A08  EF08  F005         	goto	u41
   625   000A0C  EF0A  F005         	goto	u40
   626   000A10                     u41:
   627   000A10  EF03  F005         	goto	l41
   628   000A14                     u40:
   629   000A14                     
   630                           ;./LCD_I2C.h: 48:     PIR1 = 0x00;
   631   000A14  0E00               	movlw	0
   632   000A16  6E9E               	movwf	158,c	;volatile
   633   000A18  0012               	return		;funcret
   634   000A1A                     __end_of_I2C_Write:
   635                           	callstack 0
   636                           
   637 ;; *************** function _I2C_Stop *****************
   638 ;; Defined at:
   639 ;;		line 35 in file "./LCD_I2C.h"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   653 ;;      Params:         0       0       0       0       0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_LCD_Command
   663 ;;		_LCD_Data
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text5
   668   000A1A                     __ptext5:
   669                           	callstack 0
   670   000A1A                     _I2C_Stop:
   671                           	callstack 28
   672   000A1A                     
   673                           ;./LCD_I2C.h: 37:     SSPCON2bits.PEN = 1;
   674   000A1A  84C5               	bsf	197,2,c	;volatile
   675   000A1C                     l32:
   676   000A1C  A69E               	btfss	158,3,c	;volatile
   677   000A1E  EF13  F005         	goto	u21
   678   000A22  EF15  F005         	goto	u20
   679   000A26                     u21:
   680   000A26  EF0E  F005         	goto	l32
   681   000A2A                     u20:
   682   000A2A                     
   683                           ;./LCD_I2C.h: 39:     PIR1 = 0x00;
   684   000A2A  0E00               	movlw	0
   685   000A2C  6E9E               	movwf	158,c	;volatile
   686   000A2E  0012               	return		;funcret
   687   000A30                     __end_of_I2C_Stop:
   688                           	callstack 0
   689                           
   690 ;; *************** function _I2C_Start *****************
   691 ;; Defined at:
   692 ;;		line 28 in file "./LCD_I2C.h"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   706 ;;      Params:         0       0       0       0       0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0
   709 ;;      Totals:         0       0       0       0       0       0       0       0       0
   710 ;;Total ram usage:        0 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_LCD_Command
   716 ;;		_LCD_Data
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text6
   721   000A30                     __ptext6:
   722                           	callstack 0
   723   000A30                     _I2C_Start:
   724                           	callstack 28
   725   000A30                     
   726                           ;./LCD_I2C.h: 30:     SSPCON2bits.SEN = 1;
   727   000A30  80C5               	bsf	197,0,c	;volatile
   728   000A32                     l26:
   729   000A32  A69E               	btfss	158,3,c	;volatile
   730   000A34  EF1E  F005         	goto	u11
   731   000A38  EF20  F005         	goto	u10
   732   000A3C                     u11:
   733   000A3C  EF19  F005         	goto	l26
   734   000A40                     u10:
   735   000A40                     
   736                           ;./LCD_I2C.h: 32:     PIR1 = 0x00;
   737   000A40  0E00               	movlw	0
   738   000A42  6E9E               	movwf	158,c	;volatile
   739   000A44  0012               	return		;funcret
   740   000A46                     __end_of_I2C_Start:
   741                           	callstack 0
   742                           
   743 ;; *************** function _I2C_Init *****************
   744 ;; Defined at:
   745 ;;		line 17 in file "./LCD_I2C.h"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   759 ;;      Params:         0       0       0       0       0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0
   762 ;;      Totals:         0       0       0       0       0       0       0       0       0
   763 ;;Total ram usage:        0 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text7
   773   000A46                     __ptext7:
   774                           	callstack 0
   775   000A46                     _I2C_Init:
   776                           	callstack 30
   777   000A46                     
   778                           ;./LCD_I2C.h: 19:     TRISBbits.TRISB0 = 1;
   779   000A46  8093               	bsf	147,0,c	;volatile
   780                           
   781                           ;./LCD_I2C.h: 20:     TRISBbits.TRISB1 = 1;
   782   000A48  8293               	bsf	147,1,c	;volatile
   783   000A4A                     
   784                           ;./LCD_I2C.h: 22:     SSPCON1 = 0X28;
   785   000A4A  0E28               	movlw	40
   786   000A4C  6EC6               	movwf	198,c	;volatile
   787                           
   788                           ;./LCD_I2C.h: 23:     SSPCON2 = 0x00;
   789   000A4E  0E00               	movlw	0
   790   000A50  6EC5               	movwf	197,c	;volatile
   791                           
   792                           ;./LCD_I2C.h: 24:     SSPSTAT = 0x00;
   793   000A52  0E00               	movlw	0
   794   000A54  6EC7               	movwf	199,c	;volatile
   795                           
   796                           ;./LCD_I2C.h: 25:     SSPADD = (20000000 /(4 * 100000)) - 1;
   797   000A56  0E31               	movlw	49
   798   000A58  6EC8               	movwf	200,c	;volatile
   799   000A5A  0012               	return		;funcret
   800   000A5C                     __end_of_I2C_Init:
   801                           	callstack 0
   802                           
   803                           	psect	smallconst
   804   000800                     __psmallconst:
   805                           	callstack 0
   806   000800  00                 	db	0
   807   000801  00                 	db	0	; dummy byte at the end
   808   000000                     
   809                           	psect	rparam
   810   000000                     
   811                           	psect	config
   812                           
   813                           ;Config register CONFIG1L @ 0x300000
   814                           ;	unspecified, using default values
   815                           ;	PLL Prescaler Selection bits
   816                           ;	PLLDIV = 0x0, unprogrammed default
   817                           ;	System Clock Postscaler Selection bits
   818                           ;	CPUDIV = 0x0, unprogrammed default
   819                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   820                           ;	USBDIV = 0x0, unprogrammed default
   821   300000                     	org	3145728
   822   300000  00                 	db	0
   823                           
   824                           ;Config register CONFIG1H @ 0x300001
   825                           ;	Oscillator Selection bits
   826                           ;	FOSC = HS, HS oscillator (HS)
   827                           ;	Fail-Safe Clock Monitor Enable bit
   828                           ;	FCMEN = 0x0, unprogrammed default
   829                           ;	Internal/External Oscillator Switchover bit
   830                           ;	IESO = 0x0, unprogrammed default
   831   300001                     	org	3145729
   832   300001  0C                 	db	12
   833                           
   834                           ;Config register CONFIG2L @ 0x300002
   835                           ;	Power-up Timer Enable bit
   836                           ;	PWRT = ON, PWRT enabled
   837                           ;	Brown-out Reset Enable bits
   838                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   839                           ;	Brown-out Reset Voltage bits
   840                           ;	BORV = 0x3, unprogrammed default
   841                           ;	USB Voltage Regulator Enable bit
   842                           ;	VREGEN = 0x0, unprogrammed default
   843   300002                     	org	3145730
   844   300002  1E                 	db	30
   845                           
   846                           ;Config register CONFIG2H @ 0x300003
   847                           ;	Watchdog Timer Enable bit
   848                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   849                           ;	Watchdog Timer Postscale Select bits
   850                           ;	WDTPS = 0xF, unprogrammed default
   851   300003                     	org	3145731
   852   300003  1E                 	db	30
   853                           
   854                           ; Padding undefined space
   855   300004                     	org	3145732
   856   300004  FF                 	db	255
   857                           
   858                           ;Config register CONFIG3H @ 0x300005
   859                           ;	CCP2 MUX bit
   860                           ;	CCP2MX = 0x1, unprogrammed default
   861                           ;	PORTB A/D Enable bit
   862                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   863                           ;	Low-Power Timer 1 Oscillator Enable bit
   864                           ;	LPT1OSC = 0x0, unprogrammed default
   865                           ;	MCLR Pin Enable bit
   866                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   867   300005                     	org	3145733
   868   300005  01                 	db	1
   869                           
   870                           ;Config register CONFIG4L @ 0x300006
   871                           ;	Stack Full/Underflow Reset Enable bit
   872                           ;	STVREN = 0x1, unprogrammed default
   873                           ;	Single-Supply ICSP Enable bit
   874                           ;	LVP = OFF, Single-Supply ICSP disabled
   875                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   876                           ;	ICPRT = 0x0, unprogrammed default
   877                           ;	Extended Instruction Set Enable bit
   878                           ;	XINST = 0x0, unprogrammed default
   879                           ;	Background Debugger Enable bit
   880                           ;	DEBUG = 0x1, unprogrammed default
   881   300006                     	org	3145734
   882   300006  81                 	db	129
   883                           
   884                           ; Padding undefined space
   885   300007                     	org	3145735
   886   300007  FF                 	db	255
   887                           tosu	equ	0xFFF
   888                           tosh	equ	0xFFE
   889                           tosl	equ	0xFFD
   890                           stkptr	equ	0xFFC
   891                           pclatu	equ	0xFFB
   892                           pclath	equ	0xFFA
   893                           pcl	equ	0xFF9
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           prodh	equ	0xFF4
   899                           prodl	equ	0xFF3
   900                           indf0	equ	0xFEF
   901                           postinc0	equ	0xFEE
   902                           postdec0	equ	0xFED
   903                           preinc0	equ	0xFEC
   904                           plusw0	equ	0xFEB
   905                           fsr0h	equ	0xFEA
   906                           fsr0l	equ	0xFE9
   907                           wreg	equ	0xFE8
   908                           indf1	equ	0xFE7
   909                           postinc1	equ	0xFE6
   910                           postdec1	equ	0xFE5
   911                           preinc1	equ	0xFE4
   912                           plusw1	equ	0xFE3
   913                           fsr1h	equ	0xFE2
   914                           fsr1l	equ	0xFE1
   915                           bsr	equ	0xFE0
   916                           indf2	equ	0xFDF
   917                           postinc2	equ	0xFDE
   918                           postdec2	equ	0xFDD
   919                           preinc2	equ	0xFDC
   920                           plusw2	equ	0xFDB
   921                           fsr2h	equ	0xFDA
   922                           fsr2l	equ	0xFD9
   923                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_Init->_LCD_Command
    _LCD_Command->_I2C_Write
    _LCD_Data->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     210
                                              5 COMRAM     2     2      0
                           _I2C_Init
                           _LCD_Data
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     105
                                              3 COMRAM     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     105
                                              1 COMRAM     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Data                                             2     2      0     105
                                              1 COMRAM     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _LCD_Data
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _LCD_Init
     _LCD_Command
       _I2C_Start
       _I2C_Stop
       _I2C_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3            EF      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBIGSFR_5          C      0       0      19        0.0%
BITBIGSFR_4          3      0       0      20        0.0%
BITBIGSFR_3          3      0       0      21        0.0%
BITBIGSFR_2          6      0       0      22        0.0%
BITBIGSFR_1h         A      0       0      23        0.0%
BITBIGSFR_1lh       26      0       0      24        0.0%
BITBIGSFR_1ll        1      0       0      25        0.0%
BITBIGSFRh           8      0       0      26        0.0%
BITBIGSFRl          33      0       0      27        0.0%
ABS                  0      0       0      28        0.0%
BIGRAM_1           400      0       0      29        0.0%
BIGRAM             3EE      0       0      30        0.0%
DATA                 0      0       0      31        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jun 24 10:17:11 2024

           ?_LCD_Command 0001                       l23 0A5A                       l32 0A1C  
                     l41 0A06                       l26 0A32                       l50 0884  
                     l35 0A2E                       l44 0A18                       l29 0A44  
                     l53 0980                       l38 09F8                       l47 0902  
                     l58 09E8                       u10 0A40                       u11 0A3C  
                     u20 0A2A                       u21 0A26                       u30 0A06  
                     u31 0A02                       u40 0A14                       u41 0A10  
                     u57 098C                       u67 080C                       u77 0824  
                     u87 0836                       u97 0846                      l801 0924  
                    l811 0962                      l803 0934                      l741 0A1A  
                    l813 0970                      l805 093E                      l821 09A0  
                    l743 0A2A                      l807 0948                      l751 0892  
                    l831 09BE                      l823 09A6                      l815 0982  
                    l737 0A30                      l745 09F4                      l809 0952  
                    l761 08CA                      l753 089C                      l841 09DC  
                    l833 09C4                      l825 09AC                      l817 0998  
                    l771 0A4A                      l739 0A40                      l747 0A14  
                    l763 08D4                      l755 08A6                      l843 09E2  
                    l835 09CA                      l827 09B2                      l819 099C  
                    l765 08E4                      l757 08B6                      l749 0888  
                    l781 083A                      l773 0802                      l837 09D0  
                    l829 09B8                      l767 08F2                      l759 08C0  
                    l791 0868                      l783 0850                      l775 0818  
                    l839 09D6                      l769 0A46                      l793 086E  
                    l785 0856                      l777 081E                      l795 0906  
                    l787 085C                      l779 0834                      l797 0910  
                    l789 0862                      l799 091A                      u107 0874  
                    u117 08AC                      u127 08DA                      u137 08F8  
                    u147 092A                      u157 0958                      u167 0976  
                    wreg 0FE8                     _PIR1 0F9E                     _main 0982  
       __end_of_I2C_Init 0A5C         __end_of_I2C_Stop 0A30                     start 0002  
           ___param_bank 0000         __end_of_LCD_Data 0982         __end_of_LCD_Init 0886  
                  ?_main 0001        __end_of_I2C_Start 0A46        __end_of_I2C_Write 0A1A  
        __initialization 0A5C             __end_of_main 09F2                   ??_main 0006  
          __activetblptr 0000            LCD_Data@letra 0003                   _SSPADD 0FC8  
                 _SSPBUF 0FC9                   isa$std 0001                ?_I2C_Init 0001  
              ?_I2C_Stop 0001             __mediumconst 0000       LCD_Command@command 0003  
              ?_LCD_Data 0001               __accesstop 0060  __end_of__initialization 0A5C  
              ?_LCD_Init 0001            ___rparam_used 0001           __pcstackCOMRAM 0001  
             ??_I2C_Init 0001               ??_I2C_Stop 0001               ??_LCD_Data 0002  
             ??_LCD_Init 0004                  _SSPCON1 0FC6                  _SSPCON2 0FC5  
                _SSPSTAT 0FC7                _I2C_Start 0A30                _I2C_Write 09F2  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0A5C                  __ramtop 0800                  __ptext0 0982  
                __ptext1 0802                  __ptext2 0886                  __ptext3 0904  
                __ptext4 09F2                  __ptext5 0A1A                  __ptext6 0A30  
                __ptext7 0A46     end_of_initialization 0A5C               ?_I2C_Start 0001  
             ?_I2C_Write 0001                _TRISBbits 0F93            ??_LCD_Command 0002  
    start_initialization 0A5C              ??_I2C_Start 0001              ??_I2C_Write 0001  
    __end_of_LCD_Command 0904              __smallconst 0800                 _I2C_Init 0A46  
               _I2C_Stop 0A1A                 _LCD_Data 0904                 _LCD_Init 0802  
               _PIR1bits 0F9E              _LCD_Command 0886                 __Hrparam 0000  
               __Lrparam 0000            I2C_Write@dato 0001                 isa$xinst 0000  
            _SSPCON2bits 0FC5  
